version: '3'

services:
  db:
    image: postgres:13
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  web:
    build: .
    command: sh -c "python manage.py collectstatic --noinput && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code
    ports:
      - "8080:8000"
    depends_on:
      - db
      - openai_server
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=5432
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    restart: always

  mkdocs:
    build:
      context: .
      dockerfile: Dockerfile.mkdocs
    ports:
      - "8001:8001"
    volumes:
      - .:/docs
    command: mkdocs serve --dev-addr=0.0.0.0:8001

  openai_server:
    build:
      context: ./openai_server
    command: sh -c "python manage.py runserver 0.0.0.0:8003"
    ports:
      - "8003:8003"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    networks:
      - default
    restart: always

volumes:
  postgres_data:
